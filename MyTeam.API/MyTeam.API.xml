<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MyTeam.API</name>
    </assembly>
    <members>
        <member name="T:MyTeam.API.V1.Controllers.PlayerAppController">
            <summary>
            Versao 1 do controlador de Players
            </summary>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.PlayerAppController.#ctor(Data.Context.IRepository,AutoMapper.IMapper)">
            <summary>
            
            </summary>
            <param name="repo"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.PlayerAppController.Get">
            <summary>
            Método responsável para retornar todos os Jogadoresssss!
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.PlayerAppController.Post(Dominio.Models.PlayerApp)">
            <summary>
            Método responsavel por adicionar um novo Player.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.PlayerAppController.Put(System.Int32,Dominio.Models.PlayerApp)">
            <summary>
            Método responsavel por atualizar um Player, de acordo o seu ID.
            </summary>
            <param name="id"></param>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="T:MyTeam.API.V1.Controllers.PlayerController">
            <summary>
            Versao 1 do controlador de Players
            </summary>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.PlayerController.#ctor(Data.Context.IRepository,AutoMapper.IMapper)">
            <summary>
            
            </summary>
            <param name="repo"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.PlayerController.Get(Data.Helpers.PageParams)">
            <summary>
            Método responsável para retornar todos os Jogadores!
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.PlayerController.GetPorId(System.Int32)">
            <summary>
            Método responsavel por retornar apenas um único Player, de acordo o seu ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.PlayerController.GetPorNomeQueryString(System.String)">
            <summary>
            Método responsavel por retornar apenas um único Player, de acordo o seu Nome.
            </summary>
            <param name="nome"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.PlayerController.GetPorPsnQueryString(System.String)">
            <summary>
            Método responsavel por retornar apenas um único Player, de acordo a sua PSN.
            </summary>
            <param name="psn"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.PlayerController.Post(Dominio.Models.Player)">
            <summary>
            Método responsavel por adicionar um novo Player.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.PlayerController.Put(System.Int32,Dominio.Models.Player)">
            <summary>
            Método responsavel por atualizar um Player, de acordo o seu ID.
            </summary>
            <param name="id"></param>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.PlayerController.Patch(System.Int32,Dominio.Models.Player)">
            <summary>
            Método responsavel por atualizar um Player, de acordo o seu ID.
            </summary>
            <param name="id"></param>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.PlayerController.DeletePorId(System.Int32)">
            <summary>
            Método responsavel por excluir um Player, de acordo o seu ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.PlayerController.DeletePorNome(System.String)">
            <summary>
            Método responsavel por excluir um Player, de acordo o seu Nome.
            </summary>
            <param name="nome"></param>
            <returns></returns>
        </member>
        <member name="T:MyTeam.API.V1.Controllers.UserController">
            <summary>
            Versao 1 do controlador de Users
            </summary>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.UserController.#ctor(Data.Context.IRepository)">
            <summary>
            
            </summary>
            <param name="repo"></param>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.UserController.Get">
            <summary>
            Método responsável para retornar todos os usuarios cadastrados
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.UserController.GetNome(System.String)">
            <summary>
            Método responsável para retornar 1 usuário cadastrado, de acordo o seu login
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.UserController.GetEmail(System.String)">
            <summary>
            Método responsável para retornar 1 usuário cadastrado, de acordo o seu login
            </summary>
            /// <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.UserController.Post(Dominio.Models.User)">
            <summary>
            Método responsavel por adicionar um novo Usuário.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V1.Controllers.UserController.Put(System.Int32,Dominio.Models.User)">
            <summary>
            Método responsavel por atualizar um Usuário
            </summary>
             <param name="id"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="T:MyTeam.API.V2.Controllers.GameController">
            <summary>
            Versao 2 do controlador de Games
            </summary>
        </member>
        <member name="M:MyTeam.API.V2.Controllers.GameController.#ctor(Data.Context.IRepository,AutoMapper.IMapper)">
            <summary>
            
            </summary>
            <param name="repo"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:MyTeam.API.V2.Controllers.GameController.Get(System.Int32)">
            <summary>
            Método responsável para retornar todos as Partidas de um Time!
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MyTeam.API.V2.Controllers.GameController.Get(System.String,System.Int32)" -->
        <member name="M:MyTeam.API.V2.Controllers.GameController.Post(Dominio.Models.Game)">
            <summary>
            Método responsavel por adicionar uma nova Partida.
            </summary>
            <param name="game"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V2.Controllers.GameController.Put(System.Int32,Dominio.Models.Game)">
            <summary>
            Método responsavel por atualizar uma Partida, de acordo o seu ID.
            </summary>
            <param name="id"></param>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="T:MyTeam.API.V2.Controllers.TeamController">
            <summary>
            Versao 2 do controlador de Times
            </summary>
        </member>
        <member name="M:MyTeam.API.V2.Controllers.TeamController.#ctor(Data.Context.IRepository)">
            <summary>
            
            </summary>
            <param name="repo"></param>
        </member>
        <member name="M:MyTeam.API.V2.Controllers.TeamController.Get(System.Boolean)">
            <summary>
            Método responsavel por retornar todos os TImes - Perfil FIFA FALSE ou Perfil PES TRUE
            </summary>
            <param name="game"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V2.Controllers.TeamController.GetPorId(System.Int32)">
            <summary>
            Método responsavel por retornar apenas um único Time, de acordo o seu ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V2.Controllers.TeamController.GetPorNome(System.String)">
            <summary>
            Método responsavel por retornar apenas um único Time, de acordo o seu Nome.
            </summary>
            <param name="nome"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V2.Controllers.TeamController.GetPorLikeNome(System.String)">
            <summary>
            Método responsavel por retornar os Times que possui caracteres iguais aos repassados. LIKE SQL.
            </summary>
            <param name="nome"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V2.Controllers.TeamController.Post(Dominio.Models.Team)">
            <summary>
            Método responsavel por adicionar um novo Time.
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V2.Controllers.TeamController.Put(System.Int32,Dominio.Models.Team)">
            <summary>
            Método responsavel por atualizar um Time, de acordo o seu ID.
            </summary>
            <param name="id"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V2.Controllers.TeamController.DeletePorId(System.Int32)">
            <summary>
            Método responsavel por excluir um Time, de acordo o seu ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MyTeam.API.V2.Controllers.TeamController.DeletePorNome(System.String)">
            <summary>
            Método responsavel por excluir um Time, de acordo o seu Nome.
            </summary>
            <param name="nome"></param>
            <returns></returns>
        </member>
    </members>
</doc>
